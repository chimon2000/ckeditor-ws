{"remainingRequest":"/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/source-map-loader/index.js!/Users/redge/Projects/sandbox/ckeditor-ws/modules/editor/src/contexts/Editor.tsx","dependencies":[{"path":"/Users/redge/Projects/sandbox/ckeditor-ws/modules/editor/src/contexts/Editor.tsx","mtime":1560871234018},{"path":"/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1559065432294},{"path":"/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1559065433126},{"path":"/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1559065432179},{"path":"/Users/redge/Projects/sandbox/ckeditor-ws/node_modules/source-map-loader/index.js","mtime":1559065433121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/redge/Projects/sandbox/ckeditor-ws/modules/editor/src/contexts/Editor.tsx"],"names":["React","useState","useContext","createContext","useEffect","EditorProvider","props","currentEditor","setCurrentEditor","enabledCommands","setEnabledCommands","commandHandlers","commands","forEach","command","push","handler","handleCommandChanged","get","on","off","value","executeCommand","options","console","log","execute","editing","view","focus","editor","children","EditorSubscriber","useEditor","context","EditorContext","Error","undefined"],"mappings":"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","sourcesContent":["import React, { useState, ReactNode, useContext, createContext, useEffect } from 'react'\n\nexport function EditorProvider(props: { children?: ReactNode }) {\n    const [currentEditor, setCurrentEditor] = useState<Editor | undefined>()\n    const [enabledCommands, setEnabledCommands] = useState<{ [x: string]: boolean }>({})\n\n    useEffect(() => {\n        const commandHandlers: { command: string; handler(e): void }[] = []\n\n        if (currentEditor) {\n            commands.forEach((command) => {\n                commandHandlers.push({ command, handler: handleCommandChanged })\n                currentEditor.commands.get(command).on('change', handleCommandChanged)\n            })\n        }\n\n        return () => {\n            if (currentEditor) {\n                commandHandlers.forEach(({ command, handler }) =>\n                    currentEditor.commands.get(command).off(handler)\n                )\n            }\n        }\n    }, [currentEditor])\n\n    const handleCommandChanged = () => {\n        const enabledCommands = {}\n        if (currentEditor) {\n            commands.forEach(\n                (command) => (enabledCommands[command] = currentEditor.commands.get(command).value)\n            )\n        }\n\n        setEnabledCommands(enabledCommands)\n    }\n\n    function executeCommand(command: ExecuteCommands, options) {\n        if (!currentEditor) return\n        console.log(command)\n        currentEditor.execute(command, options)\n        currentEditor.editing.view.focus()\n    }\n\n    return (\n        <EditorContext.Provider\n            value={{\n                currentEditor,\n                setCurrentEditor: (editor) => setCurrentEditor(editor),\n                executeCommand,\n                enabledCommands\n            }}>\n            {props.children}\n        </EditorContext.Provider>\n    )\n}\n\nexport function EditorSubscriber(props: EditorSubscriberProps) {\n    const { currentEditor, setCurrentEditor, executeCommand, enabledCommands } = useEditor()\n\n    return props.children({ currentEditor, setCurrentEditor, executeCommand, enabledCommands })\n}\n\nexport function useEditor() {\n    const context = useContext(EditorContext)\n    if (!context) {\n        throw new Error(`useEditor must be used within a EditorProvider`)\n    }\n\n    return context\n}\n\nconst commands: ExecuteCommands[] = [\n    'bold',\n    'italic',\n    'underline',\n    'numberedList',\n    'bulletedList',\n    'alignment',\n    'heading'\n]\n\ntype EditorSubscriberProps = {\n    children(props: InjectedEditorSubscriberProps): JSX.Element | null\n}\n\ntype InjectedEditorSubscriberProps = EditorContextProps\n\ntype EditorContextProps = {\n    currentEditor?: Editor\n    setCurrentEditor(editor?: Editor): void\n    executeCommand(command: ExecuteCommands, options?): void\n    enabledCommands: { [x: string]: boolean }\n}\n\nexport type ExecuteCommands =\n    | 'bold'\n    | 'italic'\n    | 'underline'\n    | 'numberedList'\n    | 'bulletedList'\n    | 'alignment'\n    | 'indent'\n    | 'outdent'\n    | 'heading'\n\nexport type Editor = {\n    execute(command: ExecuteCommands, options?): void\n    editing: { view: { focus(): void } }\n    commands: any\n}\n\nconst EditorContext = createContext<EditorContextProps | undefined>(undefined)\n"]}]}